(*
AFFICHAGE CLASSIQUE(ORIGINAL)(print_program) 
puissance_2_n(x1) {
    7:	x2 = 1
    6:	nop
    5:	if (x1 >=s 1) goto 4 else goto 2
    4:	x2 = x2 * 2 + 0 (int)
    3:	goto 5
    2:	x3 = x2
    1:	return x3
}






AFFICHAGE PAR INSTRUCTION (print_program2)




puissance_2_n(x1) {
    7:	(RTL.Iop ((Op.Ointconst (BinNums.Zpos BinNums.Coq_xH)), [],
   (BinNums.Coq_xO BinNums.Coq_xH),
   (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))
    6:	(RTL.Inop (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))
    5:	(RTL.Icond ((Op.Ccompimm (Integers.Cge, (BinNums.Zpos BinNums.Coq_xH))),
   [BinNums.Coq_xH], (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)),
   (BinNums.Coq_xO BinNums.Coq_xH)))
    4:	(RTL.Iop (
   (Op.Olea
      (Op.Ascaled ((BinNums.Zpos (BinNums.Coq_xO BinNums.Coq_xH)), BinNums.Z0
         ))),
   [(BinNums.Coq_xO BinNums.Coq_xH)], (BinNums.Coq_xO BinNums.Coq_xH),
   (BinNums.Coq_xI BinNums.Coq_xH)))
    3:	(RTL.Inop (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))
    2:	(RTL.Iop (Op.Omove, [(BinNums.Coq_xO BinNums.Coq_xH)],
   (BinNums.Coq_xI BinNums.Coq_xH), BinNums.Coq_xH))
    1:	(RTL.Ireturn (Some (BinNums.Coq_xI BinNums.Coq_xH)))
}

*)


let test = { AST.prog_defs =
  [(BinNums.Coq_xH,
    (AST.Gfun
       (AST.External
          (AST.EF_builtin (
             ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'a'; 'i';
               's'; '_'; 'a'; 'n'; 'n'; 'o'; 't'],
             { AST.sig_args = [AST.Tlong]; sig_res = None;
               sig_cc =
               { AST.cc_vararg = true; cc_unproto = false;
                 cc_structret = false }
               }
             )))));
    ((BinNums.Coq_xO BinNums.Coq_xH),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'b'; 's';
                'w'; 'a'; 'p'],
              { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI BinNums.Coq_xH),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'b'; 's';
                'w'; 'a'; 'p'; '3'; '2'],
              { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'b'; 's';
                'w'; 'a'; 'p'; '1'; '6'],
              { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'a';
                'b'; 's'],
              { AST.sig_args = [AST.Tfloat]; sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 's';
                'q'; 'r'; 't'],
              { AST.sig_args = [AST.Tfloat]; sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'm'; 'e';
                'm'; 'c'; 'p'; 'y'; '_'; 'a'; 'l'; 'i'; 'g'; 'n'; 'e'; 'd'],
              { AST.sig_args = [AST.Tlong; AST.Tlong; AST.Tlong; AST.Tlong];
                sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'a'; 'n';
                'n'; 'o'; 't'],
              { AST.sig_args = [AST.Tlong]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = true; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'a'; 'n';
                'n'; 'o'; 't'; '_'; 'i'; 'n'; 't'; 'v'; 'a'; 'l'],
              { AST.sig_args = [AST.Tlong; AST.Tint];
                sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'm'; 'e';
                'm'; 'b'; 'a'; 'r'],
              { AST.sig_args = []; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'v'; 'a';
                '_'; 's'; 't'; 'a'; 'r'; 't'],
              { AST.sig_args = [AST.Tlong]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'v'; 'a';
                '_'; 'a'; 'r'; 'g'],
              { AST.sig_args = [AST.Tlong; AST.Tint]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'v'; 'a';
                '_'; 'c'; 'o'; 'p'; 'y'],
              { AST.sig_args = [AST.Tlong; AST.Tlong]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'v'; 'a';
                '_'; 'e'; 'n'; 'd'],
              { AST.sig_args = [AST.Tlong]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))),
     (AST.Gfun
        (AST.External
           (AST.EF_external (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'v';
                'a'; '_'; 'i'; 'n'; 't'; '3'; '2'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_external (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'v';
                'a'; '_'; 'i'; 'n'; 't'; '6'; '4'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_external (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'v';
                'a'; '_'; 'f'; 'l'; 'o'; 'a'; 't'; '6'; '4'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_external (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'v';
                'a'; '_'; 'c'; 'o'; 'm'; 'p'; 'o'; 's'; 'i'; 't'; 'e'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'd'; 't'; 'o'; 's'],
              { AST.sig_args = [AST.Tfloat]; sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'd'; 't'; 'o'; 'u'],
              { AST.sig_args = [AST.Tfloat]; sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 't'; 'o'; 'd'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'u'; 't'; 'o'; 'd'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 't'; 'o'; 'f'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tsingle);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'u'; 't'; 'o'; 'f'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tsingle);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'd'; 'i'; 'v'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'u'; 'd'; 'i'; 'v'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'm'; 'o'; 'd'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'u'; 'm'; 'o'; 'd'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'h'; 'l'],
              { AST.sig_args = [AST.Tlong; AST.Tint];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'h'; 'r'],
              { AST.sig_args = [AST.Tlong; AST.Tint];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'a'; 'r'],
              { AST.sig_args = [AST.Tlong; AST.Tint];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 's'; 'm'; 'u'; 'l'; 'h'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_runtime (
              ['_'; '_'; 'c'; 'o'; 'm'; 'p'; 'c'; 'e'; 'r'; 't'; '_'; 'i';
                '6'; '4'; '_'; 'u'; 'm'; 'u'; 'l'; 'h'],
              { AST.sig_args = [AST.Tlong; AST.Tlong];
                sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'b'; 's';
                'w'; 'a'; 'p'; '6'; '4'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tlong);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 'l';
                'z'],
              { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 'l';
                'z'; 'l'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 'l';
                'z'; 'l'; 'l'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 't';
                'z'],
              { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 't';
                'z'; 'l'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'c'; 't';
                'z'; 'l'; 'l'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'm';
                'a'; 'x'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'm';
                'i'; 'n'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'm';
                'a'; 'd'; 'd'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'm';
                's'; 'u'; 'b'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO
           (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'n';
                'm'; 'a'; 'd'; 'd'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI
           (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'f'; 'n';
                'm'; 's'; 'u'; 'b'],
              { AST.sig_args = [AST.Tfloat; AST.Tfloat; AST.Tfloat];
                sig_res = (Some AST.Tfloat);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'r'; 'e';
                'a'; 'd'; '1'; '6'; '_'; 'r'; 'e'; 'v'; 'e'; 'r'; 's'; 'e';
                'd'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'r'; 'e';
                'a'; 'd'; '3'; '2'; '_'; 'r'; 'e'; 'v'; 'e'; 'r'; 's'; 'e';
                'd'],
              { AST.sig_args = [AST.Tlong]; sig_res = (Some AST.Tint);
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xO
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'w'; 'r';
                'i'; 't'; 'e'; '1'; '6'; '_'; 'r'; 'e'; 'v'; 'e'; 'r'; 's';
                'e'; 'd'],
              { AST.sig_args = [AST.Tlong; AST.Tint]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'w'; 'r';
                'i'; 't'; 'e'; '3'; '2'; '_'; 'r'; 'e'; 'v'; 'e'; 'r'; 's';
                'e'; 'd'],
              { AST.sig_args = [AST.Tlong; AST.Tint]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_builtin (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'n'; 'o';
                'p'],
              { AST.sig_args = []; sig_res = None;
                sig_cc =
                { AST.cc_vararg = false; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xO
        (BinNums.Coq_xO
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.External
           (AST.EF_external (
              ['_'; '_'; 'b'; 'u'; 'i'; 'l'; 't'; 'i'; 'n'; '_'; 'd'; 'e';
                'b'; 'u'; 'g'],
              { AST.sig_args = [AST.Tint]; sig_res = None;
                sig_cc =
                { AST.cc_vararg = true; cc_unproto = false;
                  cc_structret = false }
                }
              )))));
    ((BinNums.Coq_xI
        (BinNums.Coq_xI
           (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))))),
     (AST.Gfun
        (AST.Internal
           { RTL.fn_sig =
             { AST.sig_args = [AST.Tint]; sig_res = (Some AST.Tint);
               sig_cc =
               { AST.cc_vararg = false; cc_unproto = false;
                 cc_structret = false }
               };
             fn_params = [BinNums.Coq_xH]; fn_stacksize = BinNums.Z0;
             fn_code =
             (Maps.PTree.Node (
                (Maps.PTree.Node (
                   (Maps.PTree.Node (Maps.PTree.Leaf,
                      (Some (RTL.Iop (
                               (Op.Olea
                                  (Op.Ascaled (
                                     (BinNums.Zpos
                                        (BinNums.Coq_xO BinNums.Coq_xH)),
                                     BinNums.Z0))),
                               [(BinNums.Coq_xO BinNums.Coq_xH)],
                               (BinNums.Coq_xO BinNums.Coq_xH),
                               (BinNums.Coq_xI BinNums.Coq_xH)))),
                      Maps.PTree.Leaf)),
                   (Some (RTL.Iop (Op.Omove,
                            [(BinNums.Coq_xO BinNums.Coq_xH)],
                            (BinNums.Coq_xI BinNums.Coq_xH), BinNums.Coq_xH))),
                   (Maps.PTree.Node (Maps.PTree.Leaf,
                      (Some (RTL.Inop
                               (BinNums.Coq_xI
                                  (BinNums.Coq_xO BinNums.Coq_xH)))),
                      Maps.PTree.Leaf))
                   )),
                (Some (RTL.Ireturn (Some (BinNums.Coq_xI BinNums.Coq_xH)))),
                (Maps.PTree.Node (
                   (Maps.PTree.Node (Maps.PTree.Leaf,
                      (Some (RTL.Icond (
                               (Op.Ccompimm (Integers.Cge,
                                  (BinNums.Zpos BinNums.Coq_xH))),
                               [BinNums.Coq_xH],
                               (BinNums.Coq_xO
                                  (BinNums.Coq_xO BinNums.Coq_xH)),
                               (BinNums.Coq_xO BinNums.Coq_xH)))),
                      Maps.PTree.Leaf)),
                   (Some (RTL.Inop
                            (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))),
                   (Maps.PTree.Node (Maps.PTree.Leaf,
                      (Some (RTL.Iop (
                               (Op.Ointconst (BinNums.Zpos BinNums.Coq_xH)),
                               [], (BinNums.Coq_xO BinNums.Coq_xH),
                               (BinNums.Coq_xO
                                  (BinNums.Coq_xI BinNums.Coq_xH))
                               ))),
                      Maps.PTree.Leaf))
                   ))
                ));
             fn_entrypoint = (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))
             })))
    ];
  prog_public =
  [(BinNums.Coq_xI
      (BinNums.Coq_xI
         (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI
          (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI
          (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO
          (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI
          (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI
          (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO
          (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO
          (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xI
       (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xO
       (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH))));
    (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)));
    (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)));
    (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)));
    (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH)));
    (BinNums.Coq_xI (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)));
    (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH)));
    (BinNums.Coq_xI (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)));
    (BinNums.Coq_xO (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH)));
    (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH));
    (BinNums.Coq_xO (BinNums.Coq_xI BinNums.Coq_xH));
    (BinNums.Coq_xI (BinNums.Coq_xO BinNums.Coq_xH));
    (BinNums.Coq_xO (BinNums.Coq_xO BinNums.Coq_xH));
    (BinNums.Coq_xI BinNums.Coq_xH); (BinNums.Coq_xO BinNums.Coq_xH);
    BinNums.Coq_xH];
  prog_main =
  (BinNums.Coq_xO
     (BinNums.Coq_xO
        (BinNums.Coq_xO (BinNums.Coq_xI (BinNums.Coq_xI BinNums.Coq_xH)))))
  } ;;